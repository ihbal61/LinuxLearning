管道的读写特点：
使用管道时们需要注意一下几点（假设都是I/O阻塞操作）：
1.所有的指向管道写端的文件描述符都关闭了（管道写端引用计数为0），有进程从管道的读端读数据，那么管道中剩余的数据被读取以后，再次read会返回0，就像读到文件末尾一样。

2.如果有指向管道写端的文件描述符没有关闭（管道的写端引用计数大于0），而持有写端的进程也没有往管道中写数据，这时有进程从管道中读取数据，那么管道中剩余的数据被读取后，再次read会阻塞，直到管道中有数据读了才读取数据并返回。

3.说如果所有的指向管道读端的文件描述符都关闭了（管道读端引用计数为0），有进程向管道的写端写数据，那么该进程会收到一个信号SIGPIPE，通常会导致进程异常终止。

4.如果有指向管道读端的文件描述符没有关闭（管道的读端引用计数大于0），而持有读端的进程也没有从管道中读数据，这时有进程往管道中写入数据，那么在管道被写满的时候，再次调用write会阻塞，知道管道中由空位置才能再次写入数据并返回。

总结：
   读管道：
      管道中有数据，read返回实际读到的字节数。
      管道中无数据：
         写端全部关闭，read返回0，相当于读到文件末尾
         写端没有完全关闭，read阻塞等待
   
   写管道：
      管道读端全部被关闭，进程异常终止（进程收到SIGPIPE信号）
      管道读端没有全部关闭：
         管道已满：write阻塞
         管道没满：write将数据写入，并返回实际写入的字节数